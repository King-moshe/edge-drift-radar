name: edge-drift-radar

services:
  redpanda:
    image: redpandadata/redpanda:v24.1.10
    command:
      - redpanda start
      - --overprovisioned
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --node-id=0
      - --check=false
      # ↓ כתובות פנימית/חיצונית
      - --kafka-addr=internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr=internal://redpanda:9092,external://localhost:19092
    ports:
      - "9092:9092"      # (לא חובה חיצוני, אבל נשאיר)
      - "19092:19092"    # Kafka API חיצוני שמפורסם כ-localhost:19092
      - "9644:9644"      # Admin API
    networks: [edr-net]

  # redpanda:
  #   image: redpandadata/redpanda:v24.1.10
  #   command:
  #     - redpanda start
  #     - --overprovisioned
  #     - --smp=1
  #     - --memory=1G
  #     - --reserve-memory=0M
  #     - --node-id=0
  #     - --check=false
  #   ports:
  #     - "9092:9092"      # Kafka API
  #     - "9644:9644"      # Admin API
  #   networks: [edr-net]

  # One-shot init to create topic if missing
  rpk-init:
    image: redpandadata/redpanda:v24.1.10
    depends_on: [redpanda]
    entrypoint: ["bash","-lc"]
    command: |
      "
      set -e
      echo '⏳ waiting for redpanda...'
      for i in {1..30}; do
        rpk cluster info --brokers=redpanda:9092 && break || sleep 1
      done
      rpk topic create edr.telemetry --brokers=redpanda:9092 || true
      echo '✅ topic ready'
      "
    networks: [edr-net]

  timescaledb:
    image: timescale/timescaledb:latest-pg16
    environment:
      - POSTGRES_PASSWORD=edrpass
      - POSTGRES_USER=edr
      - POSTGRES_DB=edr
    ports:
      - "5432:5432"
    volumes:
      - tsdata:/var/lib/postgresql/data
      - ./sql/timescale:/docker-entrypoint-initdb.d:ro
    networks: [edr-net]

  grafana:
    image: grafana/grafana:11.0.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana:/var/lib/grafana
      - ./infra/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - timescaledb
    networks: [edr-net]

  agent:
    build:
      context: ../..
      dockerfile: agent/Dockerfile
    environment:
      - BOOTSTRAP_SERVERS=redpanda:9092
      - TOPIC=edr.telemetry
    ports:
      - "8080:8080"
    depends_on:
      - redpanda
      - rpk-init
    networks: [edr-net]

  consumer:
    build:
      context: ../..
      dockerfile: services/ingest/Dockerfile
    environment:
      - BOOTSTRAP_SERVERS=redpanda:9092
      - TOPIC=edr.telemetry
      - GROUP_ID=edr-consumer
    depends_on:
      - redpanda
      - rpk-init
    networks: [edr-net]

networks:
  edr-net: {}

volumes:
  tsdata: {}
  grafana: {}
